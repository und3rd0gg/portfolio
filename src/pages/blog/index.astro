---
import clsx from "clsx";
import { actions } from "astro:actions";
import H1 from "../../components/h1.astro";
import { formatDate } from "../../lib/utils";
import InfoLayout from "../../layouts/InfoLayout.astro";

const categoriesResult = await Astro.callAction(actions.categories.getCategories, null);
const categories = categoriesResult?.data?.categories || [];

const selectedCategory = Astro.url.searchParams.get("category") || "all";

const articlesResult = await Astro.callAction(actions.categories.filterByCategory, {
    category: selectedCategory,
});

if (articlesResult?.error) {
    console.log("ошибка", articlesResult.error);
}

const articles = articlesResult?.data?.articles || [];
---

<InfoLayout>
    <div class="p-4 sm:pt-8 sm:px-12 pb-20 min-h-screen">
        <H1> Блог </H1>

        <ul class="mt-4 flex items-center gap-4">
            <li>
                <a href="/blog" class={clsx("w-fit px-4 py-1 text-sm bg-transparent rounded-full transition-all duration-300 ease-in-out",
                    selectedCategory === "all" ? "text-white bg-zinc-100/20 outline-2 outline-offset-2 outline-zinc-100/20" : "text-zinc-400 hover:text-zinc-300"
                )}>
                    Все
                </a>
            </li>

            {
                categories.map((category) => (
                    <li>
                        <a
                            href={`/blog?category=${category.toLowerCase()}`}
                            class={clsx("w-fit px-4 py-1 text-sm bg-transparent rounded-full transition-all duration-300 ease-in-out",
                                selectedCategory === category.toLowerCase() ? "text-white bg-zinc-100/20 outline-2 outline-offset-2 outline-zinc-100/20" : "text-zinc-400 hover:text-zinc-200"
                            )}
                        >
                            {category}
                        </a>
                    </li>
                ))
            }
        </ul>

        <ul class="mt-4 space-y-6">
            {
                articles.map((article) => (
                    <li>
                        <a
                            class="space-y-1 group"
                            href={`/blog/${article.data.slug}`}
                        >
                            <h2 class="text-xl xl:text-2xl text-zinc-300 group-hover:text-white text-balance font-medium underline group-hover:underline-offset-2 decoration-transparent group-hover:decoration-zinc-500">
                                {article.data.title}
                            </h2>
                            <p class="text-base text-zinc-400">
                                {article.data.snippet}
                            </p>
                            <p class="text-sm text-zinc-500">
                                {formatDate(article.data.pubDate)} &middot;{" "}
                                {article.data.author}
                            </p>
                        </a>
                    </li>
                ))
            }
        </ul>
    </div>
</InfoLayout>
